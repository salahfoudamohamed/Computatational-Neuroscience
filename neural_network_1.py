# -*- coding: utf-8 -*-
"""Neural network_1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QObuc8H4jndGU-Wv3mT3A66-E49eWpSy
"""

import numpy as np
import random
# definde activation function:
def tanh(x):
    return np.tanh(x)

# defind weights:
random.seed(42)
w_h1_i1, w_h1_i2 = random.uniform(-0.5, 0.5), random.uniform(-0.5, 0.5)
w_h2_i1, w_h2_i2 = random.uniform(-0.5, 0.5), random.uniform(-0.5, 0.5)
w_o1_h1, w_o1_h2 = random.uniform(-0.5, 0.5), random.uniform(-0.5, 0.5)
w_o2_h1, w_o2_h2 = random.uniform(-0.5, 0.5), random.uniform(-0.5, 0.5)
# defind biases:
b_h = 0.5
b_o = 0.7
# defind inputs:
i1 = 0.5
i2 = 0.1
# hidden layer:
net_h1 = w_h1_i1 * i1 + w_h1_i2 * i2 + b_h
net_h2 = w_h2_i1 * i1 + w_h2_i2 * i2 + b_h
out_h1 = tanh(net_h1)
out_h2 = tanh(net_h2)
# output layer:
net_o1 = w_o1_h1 * out_h1 + w_o1_h2 * out_h2 + b_o
net_o2 = w_o2_h1 * out_h1 + w_o2_h2 * out_h2 + b_o
out_o1 = tanh(net_o1)
out_o2 = tanh(net_o2)
# print output:
print(f"o1: {out_o1}")
print(f"o2: {out_o2}")

